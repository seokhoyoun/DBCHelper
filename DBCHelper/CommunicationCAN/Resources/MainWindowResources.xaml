<!-- 
This resource dictionary is used by the MainWindow. 
-->
<ResourceDictionary
  xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
  xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
  xmlns:vm="clr-namespace:CommunicationCAN.ViewModel"
  xmlns:vw="clr-namespace:CommunicationCAN.View"
  xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
  >

    <!--This template applies an AllCustomersView to an instance 
  of the AllCustomersViewModel class shown in the main window.-->

    <DataTemplate DataType="{x:Type vm:AllCustomersViewModel}">
        <vw:AllCustomersView />
    </DataTemplate>

    <!-- 
  This template applies a CustomerView to an instance  
  of the CustomerViewModel class shown in the main window.
  -->
    <DataTemplate DataType="{x:Type vm:CustomerViewModel}">
        <vw:CustomerView />
    </DataTemplate>

    <DataTemplate DataType="{x:Type vm:SignalListViewModel}">
        <vw:SignalListView/>
    </DataTemplate>

    <!-- 
  This style configures both of the main content areas in the main window.
  -->
    <Style x:Key="MainHCCStyle" TargetType="{x:Type ContentControl}">

        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <!-- 
        This template ensures that content of a HeaderedContentControl 
        fills the available vertical space. 
        -->
                <ControlTemplate TargetType="{x:Type ContentControl}">
                    <DockPanel>

                        <ContentPresenter 
              ContentSource="Content" 
              ContentTemplate="{TemplateBinding ContentTemplate}" 
              />
                    </DockPanel>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--
  This style ensures that the borders in the main window are consistent.
  -->
    <Style x:Key="MainBorderStyle" TargetType="{x:Type Border}">
        <Setter Property="Background" Value="WhiteSmoke" />
        <Setter Property="BorderBrush" Value="LightGray" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="CornerRadius" Value="5" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
    </Style>

    <!--
  This template explains how to render the list of commands on the left
  side in the main window (the 'Control Panel' area).
  -->
    <DataTemplate x:Key="CommandsTemplate">
        <ItemsControl IsTabStop="False" ItemsSource="{Binding}" Margin="5,2">
            <ItemsControl.ItemTemplate>
                <DataTemplate>
                    <Grid >
                        <Expander x:Name="ExpanderMenu"   IsExpanded="False" FontSize="12" Width="220"  HorizontalAlignment="Left" Background="{x:Null}" >
                            <Expander.Header>
                                <TextBlock Margin="10 1">
                                    <Hyperlink  Command="{Binding Path=Command}" TextDecorations="">                  
                                        <materialDesign:PackIcon Kind="Package" Width="14" Height="12" Foreground="HotPink"/>
                                        <TextBlock FontSize="13" Text="{Binding Path=DisplayName}" FontWeight="SemiBold" />
                                        </Hyperlink>
                                </TextBlock>
                            </Expander.Header>
                            <ListView x:Name="ListViewMenu" ItemsSource="{Binding Path=SubItems}"
                                      Background="{x:Null}"
                                      BorderBrush="{x:Null}"
                                      Foreground="Black" VirtualizingStackPanel.IsVirtualizing="True"
                                      ScrollViewer.HorizontalScrollBarVisibility="Disabled" 
                                      VirtualizingStackPanel.VirtualizationMode="Recycling" >
                                <ListView.ItemTemplate>
                                    <DataTemplate>
                                        <TextBlock Margin="10 1">
                                                <Hyperlink Command="{Binding Path=Command}" TextDecorations="">
                                                    <materialDesign:PackIcon Kind="Signal" Width="13" Height="11" Foreground="Red"/>
                                                    <TextBlock FontSize="11" Text="{Binding Path=DisplayName}" />
                                                </Hyperlink>
                                            </TextBlock>
                                    </DataTemplate>
                                </ListView.ItemTemplate>
                            </ListView>
                        </Expander>

                    </Grid>
                </DataTemplate>
            </ItemsControl.ItemTemplate>
        </ItemsControl>
    </DataTemplate>

    <!-- 
  This template explains how to render 
  a tab item with a close button.
  -->
    <DataTemplate x:Key="ClosableTabItemTemplate">
        <DockPanel Width="120" >
            <Button 
        Command="{Binding Path=CloseCommand}"
        BorderThickness="0"
        Background="Transparent"
        Cursor="Hand"
        DockPanel.Dock="Right"
        Focusable="False"
        FontFamily="Courier" 
        FontSize="9"
        FontWeight="Bold"  
        Margin="0,1,0,0"
        Padding="0"
        VerticalContentAlignment="Bottom"
        Width="16" Height="16" 
        >
                <materialDesign:PackIcon Kind="ExitToApp" Width="13" Height="12" Foreground="Red"/>

            </Button>
            <ContentPresenter 
                Content="{Binding Path=DisplayName}" 
                VerticalAlignment="Center" 
             />
        </DockPanel>
    </DataTemplate>

    <Style x:Key="TabItemStyle" TargetType="TabItem">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="TabItem">
                    <DockPanel Width="120" >
                        <Button 
                                Command="{Binding Path=CloseCommand}"
                                BorderThickness="0"
                                Background="Transparent"
                                Cursor="Hand"
                                DockPanel.Dock="Right"
                                Focusable="False"
                                FontFamily="Courier" 
                                FontSize="9"
                                FontWeight="Bold"  
                                Margin="0,1,0,0"
                                Padding="0"
                                VerticalContentAlignment="Bottom"
                                Width="16" Height="16" 
                                >
                            <materialDesign:PackIcon Kind="ExitToApp" Width="13" Height="12" Foreground="Red"/>

                        </Button>
                        <ContentPresenter 
                Content="{Binding Path=DisplayName}" 
                VerticalAlignment="Center" 
             />
                    </DockPanel>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--
  This template explains how to render the 'Workspace' content area in the main window.
  -->
    <DataTemplate x:Key="WorkspacesTemplate">
        <TabControl 
            x:Name="WorkspaceTabControl"
            IsSynchronizedWithCurrentItem="True"
            ItemsSource="{Binding}" 
            ItemContainerStyle="{StaticResource TabItemStyle}"
            Margin="2"
         />
    </DataTemplate>

</ResourceDictionary>