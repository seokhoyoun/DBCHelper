<!-- 
This resource dictionary is used by the MainWindow. 
-->
<ResourceDictionary
  xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
  xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
  xmlns:vm="clr-namespace:CommunicationCAN.ViewModel"
  xmlns:vw="clr-namespace:CommunicationCAN.View"
  xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
  >

    <!-- 
  This template applies an AllCustomersView to an instance 
  of the AllCustomersViewModel class shown in the main window.
  -->
    <DataTemplate DataType="{x:Type vm:AllCustomersViewModel}">
        <vw:AllCustomersView />
    </DataTemplate>

    <!-- 
  This template applies a CustomerView to an instance  
  of the CustomerViewModel class shown in the main window.
  -->
    <DataTemplate DataType="{x:Type vm:CustomerViewModel}">
        <vw:CustomerView />
    </DataTemplate>

    <!-- 
  This style configures both of the main content areas in the main window.
  -->
    <Style x:Key="MainHCCStyle" TargetType="{x:Type ContentControl}">

        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <!-- 
        This template ensures that content of a HeaderedContentControl 
        fills the available vertical space. 
        -->
                <ControlTemplate TargetType="{x:Type ContentControl}">
                    <DockPanel>

                        <ContentPresenter 
              ContentSource="Content" 
              ContentTemplate="{TemplateBinding ContentTemplate}" 
              />
                    </DockPanel>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--
  This style ensures that the borders in the main window are consistent.
  -->
    <Style x:Key="MainBorderStyle" TargetType="{x:Type Border}">
        <Setter Property="Background" Value="WhiteSmoke" />
        <Setter Property="BorderBrush" Value="LightGray" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="CornerRadius" Value="5" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
    </Style>

    <!--
  This template explains how to render the list of commands on the left
  side in the main window (the 'Control Panel' area).
  -->
    <DataTemplate x:Key="CommandsTemplate">
        <ItemsControl IsTabStop="False" ItemsSource="{Binding}" Margin="5,2">
            <ItemsControl.ItemTemplate>
                <DataTemplate>
                    <Grid >
                        <!--<materialDesign:PackIcon Kind="{Binding Path=Icon}" Width="15" Height="15" Margin="10 16" Foreground="DodgerBlue"/>-->
                        <!--<ToggleButton Command="{Binding Command}" Width="50" HorizontalAlignment="Left" />-->

                        <!--123-->
                        <!--<materialDesign:PackIcon Kind="{Binding Path=Icon}" Width="25" Height="25" Foreground="DodgerBlue" Margin="1 5 0 0" />-->
                        <!--</Button>-->
                        <Expander x:Name="ExpanderMenu"   IsExpanded="False" FontSize="12" Width="220"  HorizontalAlignment="Left" Background="{x:Null}" >
                            <Expander.Header>
                                <TextBlock Margin="10 1">
                                    <Hyperlink  Command="{Binding Path=Command}" TextDecorations="">
                                        <!--<Hyperlink.Style>
                                            <Style TargetType="Hyperlink"
                                                   BasedOn="{StaticResource {x:Type Hyperlink}}">
                                                <Setter Property="Foreground" Value="HotPink"/>
                                            </Style>
                                        </Hyperlink.Style>-->
                                        <materialDesign:PackIcon Kind="Package" Width="14" Height="12" Foreground="HotPink"/>
                                        <TextBlock FontSize="13" Text="{Binding Path=DisplayName}" FontWeight="SemiBold" />
                                        </Hyperlink>
                                </TextBlock>
                            </Expander.Header>
                            <ListView x:Name="ListViewMenu" ItemsSource="{Binding Path=SubItems}"
                                      Background="{x:Null}"
                                      BorderBrush="{x:Null}"
                                      Foreground="Black" VirtualizingStackPanel.IsVirtualizing="True"
                                      ScrollViewer.HorizontalScrollBarVisibility="Disabled" 
                                      VirtualizingStackPanel.VirtualizationMode="Recycling" >
                                <ListView.ItemTemplate>
                                    <DataTemplate>
                                        <TextBlock Margin="10 1">
                                                <Hyperlink Command="{Binding Path=Command}" TextDecorations="">
                                                    <materialDesign:PackIcon Kind="Signal" Width="13" Height="11" Foreground="Red"/>
                                                    <TextBlock FontSize="11" Text="{Binding Path=DisplayName}" />
                                                </Hyperlink>
                                            </TextBlock>
                                    </DataTemplate>
                                </ListView.ItemTemplate>
                            </ListView>
                        </Expander>
                        <!--<Button Background="{x:Null}" BorderBrush="{x:Null}" Command="{Binding Command}" Width="30">
                            <materialDesign:PackIcon Kind="Plus" Width="50" Height="80" Foreground="Black"/>
                        </Button>-->
                    </Grid>
                    <!--<TextBlock Margin="2,6">
            <Hyperlink Command="{Binding Path=Command}">
              <TextBlock Text="{Binding Path=DisplayName}" />
            </Hyperlink>
          </TextBlock>-->
                </DataTemplate>
            </ItemsControl.ItemTemplate>
        </ItemsControl>
    </DataTemplate>

    <!-- 
  This template explains how to render 
  a tab item with a close button.
  -->
    <DataTemplate x:Key="ClosableTabItemTemplate">
        <DockPanel Width="120">
            <Button 
        Command="{Binding Path=CloseCommand}"
        Content="X"
        Cursor="Hand"
        DockPanel.Dock="Right"
        Focusable="False"
        FontFamily="Courier" 
        FontSize="9"
        FontWeight="Bold"  
        Margin="0,1,0,0"
        Padding="0"
        VerticalContentAlignment="Bottom"
        Width="16" Height="16" 
        />
            <ContentPresenter 
        Content="{Binding Path=DisplayName}" 
        VerticalAlignment="Center" 
        />
        </DockPanel>
    </DataTemplate>

    <!--
  This template explains how to render the 'Workspace' content area in the main window.
  -->
    <DataTemplate x:Key="WorkspacesTemplate">
        <TabControl 
      IsSynchronizedWithCurrentItem="True" 
      ItemsSource="{Binding}" 
      ItemTemplate="{StaticResource ClosableTabItemTemplate}"
      Margin="4"
      />
    </DataTemplate>

</ResourceDictionary>